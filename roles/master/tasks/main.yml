---

- name: Get status of the admin.conf
  stat: path=/etc/kubernetes/admin.conf
  register: admin

- name: lets init kubeadmin on the master
  shell: kubeadm init --api-advertise-addresses="$(hostname -i)" > /vagrant/kubeinit
  when: admin.stat.exists == False

- name: Set --advertise-address flag in kube-apiserver static pod manifest (workaround for https://github.com/kubernetes/kubernetes/issues/34101)
  become: yes
  shell: "jq '.spec.containers[0].command |= .+ [\"--advertise-address={{  hostvars[masterNodeName]['ansible_all_ipv4_addresses'][1] }}\"]' /etc/kubernetes/manifests/kube-apiserver.json > /tmp/kube-apiserver.json && mv /tmp/kube-apiserver.json /etc/kubernetes/manifests/kube-apiserver.json"
  when: admin.stat.exists == False

- name: Set --proxy-mode flag in kube-proxy daemonset (workaround for https://github.com/kubernetes/kubernetes/issues/34101)
  become: yes
  shell: "kubectl -n kube-system get ds -l 'component=kube-proxy-amd64' -o json | jq '.items[0].spec.template.spec.containers[0].command |= .+ [\"--proxy-mode=userspace\"]' | kubectl apply -f - && kubectl -n kube-system delete pods -l 'component=kube-proxy-amd64'"
  when: admin.stat.exists == False

- name: Deploy weave-kube
  shell: kubectl apply -f https://git.io/weave-kube
  when: admin.stat.exists == False

- name: Copy the admin.conf to /vagrant
  command: cp /etc/kubernetes/admin.conf /vagrant/admin.conf
